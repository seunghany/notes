Two Types of Program Constraint
1. Execution Cost (Our focus while learning algorithm)
    - Time Complexity of a program (How much time?)
    - Memeory Complexity of a prgoram (how much memory?)

2. Programming Cost (Very important in practice, but not a focus in this course)
    - Development time
        - what if you develop a very nice program a year later than your competitor
    - Readability, modifiability, and maintainability 
        - Readability 코드를 짯는데 남이 못 읽음
        - Modifiability 다른 사람도 쉽게 수정할 수 있어야 함
        - Maintainability

-------------------------------------------------------------------------------------------------------------------
Measuring Time Complexity

1. Measure Execution time in seconds using a cliet program (e.g time module)
    - Pros: Easy to measure. Gives actual time
    - Pros: Large amounts of time might be required. Reusults depend on lots of factors(컴퓨터 성능 차이, 다른 것을 하고 있었는지.. 등등)

2. Count possible operations in terms of input list size nice
    - Pros: Machine independent. Gives algorithm's scalability - > 어느 컴퓨터든 상관 없음
    - Cons: Tedious to compute... Does not give actual time

Fortunately, we usually care only about asymptotic behavior (with a very large N -> Big Data)